<Window x:Class="InoriDock.WPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:dockCom="clr-namespace:InoriDock.WPF.Components.DockComponent"
        xmlns:item="clr-namespace:InoriDock.WPF.Components.DockComponent.DockItems"
        xmlns:conver="clr-namespace:InoriDock.WPF.Utilities.Converters"
        xmlns:ut="clr-namespace:InoriDock.WPF.Utilities"
        Title="MainWindow"
        Width="1200"
        Height="200"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="Transparent"
        Style="{StaticResource WindowDefaultStyleKey}"
        mc:Ignorable="d">

    <Window.Resources>
        <ut:BindingProxy x:Key="DockBarProxy" Data="{Binding ElementName=DockBar}" />
        <conver:MenuParamsConverter x:Key="MenuParamsConverter" />
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoadedCommond}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="ContentRendered">
            <i:InvokeCommandAction Command="{Binding ContentRenderedCommond}" CommandParameter="{Binding ElementName=DockBar}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Border AllowDrop="True"
            Background="Transparent"
            BorderBrush="Yellow"
            BorderThickness="3">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="PreviewDragOver">
                <i:InvokeCommandAction Command="{Binding BorderPreviewDragOver}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="Drop">
                <i:InvokeCommandAction Command="{Binding BorderDrop}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <Border.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Save" Command="{Binding MenuItemClick}">
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource MenuParamsConverter}">
                            <Binding RelativeSource="{RelativeSource Self}" Path="Header" />
                            <Binding Source="{StaticResource DockBarProxy}" Path="Data" />
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="Load" Command="{Binding MenuItemClick}">
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource MenuParamsConverter}">
                            <Binding RelativeSource="{RelativeSource Self}" Path="Header" />
                            <Binding Source="{StaticResource DockBarProxy}" Path="Data" />
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                </MenuItem>
            </ContextMenu>
        </Border.ContextMenu>

        <Border Padding="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                BorderBrush="Blue"
                BorderThickness="1">
            <!--
                UseLayoutRounding确保布局计算时的数值四舍五入到最接近的整数
                SnapsToDevicePixels确保控件的边界对齐到设备像素
            -->

            <StackPanel x:Name="DockBar"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        dockCom:Dock.IsDockEnabled="True"
                        Background="Transparent"
                        Orientation="Horizontal">
                <!--<Button Width="80" Click="Button_Click" />-->

            </StackPanel>
        </Border>
    </Border>

</Window>